{"version":3,"sources":["Home.js","topNav.js","Dice.js","Books.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","Fragment","className","role","aria-label","theme","extendTheme","palette","background","main","hover","buttonSx","&:hover","bgcolor","color","TopNav","navigate","useNavigate","CssVarsProvider","Button","variant","onClick","sx","disabled","Roller","_useState","useState","_useState2","_slicedToArray","rolledValue1","setRolledValue1","_useState3","_useState4","rolledValue2","_useState5","_useState6","trigger","setTrigger","_useState7","_useState8","textColor","setTextColor","_useState9","_useState10","toCheck","setToCheck","_useState11","_useState12","modifier","setModifier","_useState13","_useState14","loHi","setLoHi","_useState15","_useState16","disabledState","setDisabledState","_useState17","_useState18","crit","setCrit","useEffect","isNaN","loop","setInterval","randomNo","Math","floor","random","console","log","setTimeout","clearInterval","undefined","parseInt","lowerOrHigher","event","target","value","Grid","container","spacing","marginLeft","flexGrow","direction","alignItems","justifyContent","textAlign","style","gap","map","walls","margin","width","height","borderRadius","e","display","marginTop","Typography","level","RadioGroup","defaultValue","name","flexDirection","mb","flexWrap","Radio","label","onChange","Input","placeholder","float","Books","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router","Routes","Route","exact","path","element"],"mappings":"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","file":"static/js/main.4c636e34.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.scss';\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n    <div className=\"App\">\r\n      <h1 className=\"header\"> Welcome!</h1>\r\n    </div>\r\n    <div className=\"text-box\">\r\n      This is my temporary work in progress site, soon (for sure <span role=\"img\" aria-label='*lulz*'>ðŸ˜‚</span>) <br/>\r\n      it will be filled with some useful things.<br/> Stay tuned <span role=\"img\" aria-label='\"*wink*'>ðŸ˜‰</span>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './navBar.scss';\r\nimport {\r\n  Button,\r\n  CssVarsProvider,\r\n  extendTheme\r\n} from '@mui/joy';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst theme = extendTheme({\r\n  palette: {\r\n    background: {\r\n      main: '#50A4B9',\r\n      hover: '#367584'\r\n    }\r\n  }\r\n})\r\n\r\nconst buttonSx = {\r\n  \"&:hover\":{\r\n    bgcolor: \"rgba(0,0,0,1)\"\r\n  },\r\n  bgcolor: \"rgba(0,0,0,.1)\",\r\n  color: \"white\"\r\n}\r\nconst main = '/rolling-up';\r\nconst TopNav = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  return (\r\n    <>\r\n    <CssVarsProvider theme={theme}>\r\n      <Button  variant=\"soft\" onClick={()=>navigate(main)}sx={buttonSx}>Home</Button>\r\n      <Button  variant=\"soft\" onClick={()=>navigate(main+'/roller')}sx={buttonSx}>Dice Roll</Button>\r\n      <Button  disabled variant=\"soft\" onClick={()=>navigate(main+'/books')}sx={buttonSx}>Books</Button>\r\n    </CssVarsProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopNav;","import React, { useEffect, useState } from 'react';\r\nimport { Radio, RadioGroup, Button, Grid, Typography, Input } from '@mui/joy';\r\n\r\nconst Roller = () => {\r\n  const [rolledValue1, setRolledValue1] = useState(0);\r\n  const [rolledValue2, setRolledValue2] = useState(0);\r\n  const [trigger, setTrigger] = useState();\r\n  const [textColor, setTextColor] = useState('white');\r\n  const [toCheck, setToCheck] = useState();\r\n  const [modifier, setModifier] = useState(0);\r\n  const [loHi, setLoHi] = useState();\r\n  const [disabledState, setDisabledState] = useState(false);\r\n  const [crit, setCrit] = useState(0);\r\n\r\n   useEffect(() => {\r\n    let i = 100;\r\n    if (!isNaN(trigger)) {\r\n      var loop = setInterval(() => {\r\n        setCrit(0);\r\n        const randomNo = Math.floor(Math.random() * (trigger) + 1);\r\n        console.log(randomNo+'---'+trigger);\r\n        if(randomNo == 20 && trigger == 20){\r\n          console.log('CRIT!')\r\n          setCrit(20);\r\n        }\r\n        if(randomNo == 1 && trigger == 20){\r\n          console.log('CRIT!')\r\n          setCrit(1);\r\n        }\r\n        setRolledValue1(randomNo + modifier);\r\n      }, i)\r\n      setTimeout(() => { \r\n        clearInterval(loop);\r\n       \r\n      }, 1000);\r\n      setTrigger('n')\r\n    }\r\n  }, [trigger])\r\n\r\n  useEffect(()=> {\r\n    console.log(crit);\r\n    if(rolledValue1 < 1)\r\n      setRolledValue1(1);\r\n    if (toCheck !== undefined){\r\n    if(loHi === 'higher'){\r\n        if (rolledValue1 < parseInt(toCheck)) {\r\n          setTextColor('red')\r\n      } else {\r\n          setTextColor('green')\r\n      }\r\n      if(crit == 20)\r\n      setTextColor('yellow')\r\n      if(crit == 1)\r\n      setTextColor('black')\r\n    }else{\r\n      if (rolledValue1 > parseInt(toCheck)) {\r\n        setTextColor('red')\r\n      } else {\r\n        setTextColor('green')\r\n      }\r\n      if(crit == 20)\r\n      setTextColor('black')\r\n      if(crit == 1)\r\n      setTextColor('yellow')\r\n    }\r\n    }\r\n  },[rolledValue1, rolledValue2])\r\n\r\n  useEffect(()=> {\r\n    if(!modifier)\r\n      setModifier(0);\r\n  },[modifier])\r\n\r\n  useEffect(()=>{\r\n    if(toCheck){\r\n      setDisabledState(false);\r\n    }else{\r\n      setDisabledState(true);\r\n    }\r\n  },[toCheck])\r\n\r\n  const lowerOrHigher = (event => {\r\n    setLoHi(event.target.value);\r\n  }) \r\n\r\n  return (\r\n    <>\r\n    <Grid container spacing={2} sx={{marginLeft:'1vw', flexGrow: 1}} direction=\"column\">\r\n      <Grid alignItems=\"center\" justifyContent=\"center\" direction=\"column\" sx={{textAlign:'center'}}>\r\n        <h5 style={{ color: \"#ffffff\" }}>\r\n          Select dice\r\n        </h5>\r\n      </Grid>\r\n      <Grid alignItems=\"center\" justifyContent=\"center\" direction=\"column\" sx={{textAlign:'center', gap: 2}}>\r\n          {['2', '4', '6', '8', '10', '12', '20', '100'].map((walls) => (\r\n              <Button value={walls} sx={{margin: 0.5, width: '50px', height: '50px', color:'white', borderRadius: '50%', bgcolor:'#367584',  '&:hover':{color:'black', bgcolor: '#5e909c'}}} onClick={(e) => {\r\n                if (!isNaN(e.target.value)) {\r\n                  setTrigger(e.target.value)\r\n                }\r\n              }}>{walls}</Button>\r\n          ))}\r\n        </Grid>\r\n        <Grid alignItems=\"center\" display='flex' justifyContent=\"center\" direction=\"column\" sx={{marginTop: '2vh'}}>\r\n          <Typography sx={{ color: textColor}} level=\"h1\">{rolledValue1}</Typography >\r\n        </Grid>\r\n        <Grid alignItems=\"center\" display='flex' justifyContent=\"center\" direction=\"column\" sx={{marginTop: '4vh'}}>\r\n          <RadioGroup defaultValue=\"lower\" name=\"radio-buttons-group\" sx={{ flexDirection: 'row', margin: 0, gap: 2, mb: 2, flexWrap: 'wrap', height: '10px' }}>\r\n            <Radio value=\"lower\" disabled={disabledState} label=\"Lower than\" variant=\"soft\" sx={{ color: 'white' }} onChange={lowerOrHigher}/>\r\n            <Radio value=\"higher\" disabled={disabledState} label=\"Higher than\" variant=\"soft\" sx={{ color: 'white', margin: 0 }} onChange={lowerOrHigher}/>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid alignItems=\"center\" display='flex' justifyContent=\"center\" direction=\"column\" sx={{marginTop: '4vh'}}>\r\n          <Input onChange={(e) => setToCheck(e.target.value)} placeholder=\"to pass\" sx={{ float: 'left', height: '50px', width: '90px'}} />\r\n          <Input onChange={(e) => setModifier(parseInt(e.target.value))} placeholder=\"+/-\" sx={{ float: 'left', height: '50px', width: '90px'}} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Roller;","import React from 'react';\r\n\r\n\r\nconst Books = () => {\r\n\r\n\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Books;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport Home from './Home';\r\nimport TopNav from './topNav';\r\nimport Roller from './Dice';\r\nimport Books from './Books';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nconst main = '/rolling-up';\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <TopNav className=\"navigation\"/>\r\n      <Routes>\r\n        <Route exact path={main} element={<Home/>}/>\r\n        <Route exact path={main+'/roller'} element={<Roller/>}/>\r\n        <Route exact path={main+'/books'} element={<Books/>}/>\r\n      </Routes>\r\n    </Router>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}