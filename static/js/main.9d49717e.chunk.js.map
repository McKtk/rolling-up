{"version":3,"sources":["Home.js","topNav.js","Dice.js","reportWebVitals.js","index.js"],"names":["Home","React","createElement","Fragment","className","role","aria-label","theme","extendTheme","palette","background","main","hover","buttonSx","&:hover","bgcolor","color","TopNav","navigate","useNavigate","CssVarsProvider","Button","variant","onClick","sx","Roller","_useState","useState","_useState2","_slicedToArray","rolledValue1","setRolledValue1","_useState3","_useState4","rolledValue2","_useState5","_useState6","trigger","setTrigger","_useState7","_useState8","textColor","setTextColor","_useState9","_useState10","toCheck","setToCheck","_useState11","_useState12","modifier","setModifier","_useState13","_useState14","loHi","setLoHi","useEffect","isNaN","loop","setInterval","Math","floor","random","setTimeout","clearInterval","console","log","undefined","parseInt","lowerOrHigher","event","target","value","Grid","container","spacing","marginLeft","flexGrow","direction","alignItems","justifyContent","textAlign","style","gap","map","walls","margin","width","height","borderRadius","e","display","marginTop","Typography","level","RadioGroup","defaultValue","name","flexDirection","mb","flexWrap","Radio","label","onChange","Input","placeholder","float","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router","Routes","Route","exact","path","element"],"mappings":"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","file":"static/js/main.9d49717e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.scss';\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n    <div className=\"App\">\r\n      <h1 className=\"header\"> Welcome!</h1>\r\n    </div>\r\n    <div className=\"text-box\">\r\n      This is my temporary work in progress site, soon (for sure <span role=\"img\" aria-label='*lulz*'>ðŸ˜‚</span>) <br/>\r\n      it will be filled with some useful things.<br/> Stay tuned <span role=\"img\" aria-label='\"*wink*'>ðŸ˜‰</span>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './navBar.scss';\r\nimport {\r\n  Button,\r\n  CssVarsProvider,\r\n  extendTheme\r\n} from '@mui/joy';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst theme = extendTheme({\r\n  palette: {\r\n    background: {\r\n      main: '#50A4B9',\r\n      hover: '#367584'\r\n    }\r\n  }\r\n})\r\n\r\nconst buttonSx = {\r\n  \"&:hover\":{\r\n    bgcolor: \"rgba(0,0,0,1)\"\r\n  },\r\n  bgcolor: \"rgba(0,0,0,.1)\",\r\n  color: \"white\"\r\n}\r\nconst TopNav = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  return (\r\n    <>\r\n    <CssVarsProvider theme={theme}>\r\n      <Button  variant=\"soft\" onClick={()=>navigate('/rolling-up')}sx={buttonSx}>Home</Button>\r\n      <Button  variant=\"soft\" onClick={()=>navigate('/rolling-up/roller')}sx={buttonSx}>Dice Roll</Button>\r\n    </CssVarsProvider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopNav;","import React, { useEffect, useState } from 'react';\r\nimport { Radio, RadioGroup, Button, Grid, Typography, Input } from '@mui/joy';\r\n\r\nconst Roller = () => {\r\n  const [rolledValue1, setRolledValue1] = useState(0);\r\n  const [rolledValue2, setRolledValue2] = useState(0);\r\n  const [trigger, setTrigger] = useState();\r\n  const [textColor, setTextColor] = useState('white');\r\n  const [toCheck, setToCheck] = useState();\r\n  const [modifier, setModifier] = useState(0);\r\n  const [loHi, setLoHi] = useState();\r\n\r\n   useEffect(() => {\r\n    if(!toCheck)\r\n    setTextColor('white')\r\n    let i = 100;\r\n    if (!isNaN(trigger)) {\r\n      var loop = setInterval(() => {\r\n        setRolledValue1(Math.floor(Math.random() * (trigger) + 1) + modifier);\r\n      }, i)\r\n      setTimeout(() => { \r\n        clearInterval(loop);\r\n       \r\n      }, 1000);\r\n      setTrigger('n')\r\n    }\r\n    console.log('to check ',toCheck)\r\n  }, [trigger])\r\n\r\n  useEffect(()=> {\r\n    if(loHi === 'higher'){\r\n      if (toCheck !== undefined){\r\n        console.log(toCheck)\r\n        console.log(rolledValue1)\r\n        if (rolledValue1 < parseInt(toCheck)) {\r\n          setTextColor('red')\r\n      } else {\r\n          setTextColor('green')\r\n      }}\r\n    }else{\r\n      if (toCheck !== undefined){\r\n        console.log(toCheck)\r\n        console.log(rolledValue1)\r\n        if (rolledValue1 > parseInt(toCheck)) {\r\n          setTextColor('red')\r\n      } else {\r\n          setTextColor('green')\r\n      }}\r\n    }\r\n  },[rolledValue1, rolledValue2])\r\n\r\n  useEffect(()=> {\r\n    if(!modifier)\r\n      setModifier(0);\r\n  },[modifier])\r\n  const lowerOrHigher = (event => {\r\n    setLoHi(event.target.value);\r\n  }) \r\n\r\n  return (\r\n    <>\r\n    <Grid container spacing={2} sx={{marginLeft:'1vw', flexGrow: 1}} direction=\"column\">\r\n      <Grid alignItems=\"center\" justifyContent=\"center\" direction=\"column\" sx={{textAlign:'center'}}>\r\n        <h5 style={{ color: \"#ffffff\" }}>\r\n          Select dice\r\n        </h5>\r\n      </Grid>\r\n      <Grid alignItems=\"center\" justifyContent=\"center\" direction=\"column\" sx={{textAlign:'center', gap: 2}}>\r\n          {['2', '4', '6', '8', '10', '12', '20', '100'].map((walls) => (\r\n              <Button value={walls} sx={{margin: 0.5, width: '50px', height: '50px', color:'white', borderRadius: '50%', bgcolor:'#367584',  '&:hover':{color:'black', bgcolor: '#5e909c'}}} onClick={(e) => {\r\n                if (!isNaN(e.target.value)) {\r\n                  setTrigger(e.target.value)\r\n                }\r\n              }}>{walls}</Button>\r\n          ))}\r\n        </Grid>\r\n        <Grid alignItems=\"center\" display='flex' justifyContent=\"center\" direction=\"column\" sx={{marginTop: '2vh'}}>\r\n          <Typography sx={{ color: textColor}} level=\"h1\">{rolledValue1}</Typography >\r\n        </Grid>\r\n        <Grid alignItems=\"center\" display='flex' justifyContent=\"center\" direction=\"column\" sx={{marginTop: '4vh'}}>\r\n          <RadioGroup defaultValue=\"lower\" name=\"radio-buttons-group\" sx={{ flexDirection: 'row', margin: 0, gap: 2, mb: 2, flexWrap: 'wrap', height: '10px' }}>\r\n            <Radio value=\"lower\" label=\"Lower than\" variant=\"soft\" sx={{ color: 'white' }} onChange={lowerOrHigher}/>\r\n            <Radio value=\"higher\" label=\"Higher than\" variant=\"soft\" sx={{ color: 'white', margin: 0 }} onChange={lowerOrHigher}/>\r\n          </RadioGroup>\r\n        </Grid>\r\n        <Grid alignItems=\"center\" display='flex' justifyContent=\"center\" direction=\"column\" sx={{marginTop: '4vh'}}>\r\n          <Input onChange={(e) => setToCheck(e.target.value)} placeholder=\"to pass\" sx={{ float: 'left', height: '50px', width: '90px'}} />\r\n          <Input onChange={(e) => setModifier(parseInt(e.target.value))} placeholder=\"+/-\" sx={{ float: 'left', height: '50px', width: '90px'}} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Roller;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport Home from './Home';\r\nimport TopNav from './topNav';\r\nimport Roller from './Dice';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nconst main = '/rolling-up';\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <TopNav className=\"navigation\"/>\r\n      <Routes>\r\n        <Route exact path={main} element={<Home/>}/>\r\n        <Route exact path={main+'/roller'} element={<Roller/>}/>\r\n      </Routes>\r\n    </Router>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}